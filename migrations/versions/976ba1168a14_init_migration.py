"""Init migration

Revision ID: 976ba1168a14
Revises:
Create Date: 2025-02-17 03:35:14.806661

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "976ba1168a14"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_index(
        op.f("ix_public_items_name"), "items", ["name"], unique=False, schema="public"
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.Column("balance", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_index(
        op.f("ix_public_users_username"),
        "users",
        ["username"],
        unique=True,
        schema="public",
    )
    op.create_table(
        "purchases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("pub_date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["public.items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "transactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("from_user_id", sa.Integer(), nullable=False),
        sa.Column("to_user_id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["from_user_id"],
            ["public.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["to_user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )

    bind = op.get_bind()

    insert_query = """
                 INSERT INTO items (name, price) VALUES
                 ('t-shirt', 80),
                 ('cup', 20),
                 ('book', 50),
                 ('pen', 10),
                 ('powerbank', 200),
                 ('hoody', 300),
                 ('umbrella', 200),
                 ('socks', 10),
                 ('wallet', 50),
                 ('pink-hoody', 500),
                 ('expensive', 100000);
             """

    bind.execute(sa.text("TRUNCATE TABLE items CASCADE;"))
    bind.execute(sa.text(insert_query))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("transactions", schema="public")
    op.drop_table("purchases", schema="public")
    op.drop_index(op.f("ix_public_users_username"), table_name="users", schema="public")
    op.drop_table("users", schema="public")
    op.drop_index(op.f("ix_public_items_name"), table_name="items", schema="public")
    op.drop_table("items", schema="public")

    bind = op.get_bind()

    bind.execute(sa.text("TRUNCATE TABLE items CASCADE;"))
    # ### end Alembic commands ###
